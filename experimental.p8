pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--initial variables etc

function _init()
	updates = 0
	--constants
	
	g_friction = .95
	a_friction = .97
	gravity = 0.25
	solid_flag = 1
	wall_flag = 2
	deadly_flag = 3
	paint_flag = 4
	goal_flag = 7
	
	
	sprites = {
		standing = 1,
		running = 3,
		jumping = 18,
		falling = 17,
		charge = 5,
		sliding = 19,
		spawn = 32,
		sand = 77,
		cloud = 101
	}
	
	--global vars
	screen = "controls"
	
	world = 1
	level = 1
	
	mapx_ofst = 0
	mapy_ofst = 0
	bnp = false
	b_time = 0
	wall_x = 0
	
	part_tick = 0
	jump_from = ""
	time_held = 0
	
	
	basex = 8
	basey = 104
	classes = {}
	
	plr = {
		--instance vars
		ticker = 0,
		x = 8,
		y = 104,
		w = 8,
		h = 8,
		dx = 0,
		dy = 0,
		weighted = true,
		is_player = true,
		max_dy = 3,
		max_dx = 4,
		sprite = sprites.standing,
		on_ground = true,
		face_r = true,
		j_left = 1,
		max_jump = 2,
		wall_jumps = 1,
		charge_j = false,
		on_wall = false,
		clr = "blue",
		respawning = true,
		--functions
		update = function()
			if btn(0) then
				if jump_from == "right" then
					plr.wall_jumps = 1
				end
				if btn(5) then
					plr.dx-=.25
				end
				plr.dx-=.25
			end
			if btn(1) then
				if jump_from == "left" then
					plr.wall_jumps = 1
				end
				if btn(5) then
					plr.dx+=.25
				end
				plr.dx +=.25
			end
			--btn 2 is the up arrow
			if btn(2) then
				if plr.j_left > 0 and not bnp then	
					plr.on_wall = false
					plr.dy=-1.5
					plr.on_ground = false
					plr.j_left -=1
					bnp = true
				elseif bnp and b_time < 6 then
					b_time +=1
					plr.dy=-2
				end
			else
				bnp = false
				b_time = 0
			end
			
			if btn(3) then
				time_held+=1
				if time_held > 20 then
					plr.charge_j = true
				end
			else
				time_held = 0
				if plr.charge_j == true then
					plr.dy -=5
					plr.on_ground = false
					plr.j_left -=1
					plr.charge_j = false
				end
			end
			
			plr.spr_update()
			physics_update()
			move(plr)
			
		end,
		spr_update = function()
			plr.ticker += 0.5
			
			if plr.dx < 0 then
				plr.face_r = true
			elseif plr.dx > 0 then
				plr.face_r = false
			end
			
			if plr.respawning then
				plr.sprite = sprites.spawn
				local change = flr(plr.ticker/5)
				plr.sprite += change
				if plr.ticker > 15 then
					plr.respawning = false
				end
			elseif plr.on_wall then
				plr.sprite = sprites.sliding-- + modifier
			elseif not plr.on_ground and not plr.on_wall then
				if abs(plr.dx) > 0 and plr.dy < -.5 then
					plr.sprite = sprites.jumping-- + --modifier
				else
					plr.sprite = sprites.falling-- + --modifier
				end
			else
				
				if abs(plr.dx) > 0 then
					plr.sprite = sprites.running-- + modifier
				else
					if plr.charge_j then
						if plr.ticker %5 > 2 then
							plr.sprite = sprites.charge
						else
							plr.sprite = sprites.standing-- + modifier
						end
					else
						plr.sprite = sprites.standing-- + modifier
					end
				end
				
				if plr.ticker > 10 then
					if plr.ticker < 20 then
						plr.sprite += 1
					else
						plr.ticker = 0
					end
				end
				
			end
		end,
		draw = function()
			spr(plr.sprite,plr.x,plr.y,1,1,plr.face_r)
		end
		}
		
		create_classes()
		parts = {}
		clouds = {}
		on_map={}
		
		for c = 0,40 do
			parts[c] = make_snow()
		end
		
		for z = 1,7 do
			clouds[z] = make_cloud()
		end
end





-->8
--draw and update

function _draw()
	--rectfill(0,0,128,128,0)
	
	if screen == "controls" then
		cls()
		rectfill(0,0,128,128,0)
		print("use the arrow keys to move/jump",0,10,7)
		print("hold up arrow for a longer jump",0,30,7)
		print("tap for a shorter jump",0,40,7)
		print("use the x key to sprint",0,60,7)
		print("hold in the down key to",0,80,7) 
		print("do a charged up high jump!",0,90,7)
		print("press x to continue to the game",0,110,7)
	else	
		
		cls()
		
		--palt(0,false)
		
		rectfill(0,0,128,128,1)
		
		if world == 1 then
			foreach(clouds,function(cloud)
				spr(sprites.cloud,cloud.x,cloud.y,2,1)
			end)
		end
		
		map(0+mapx_ofst,0,0,0,16,16,1)
		
		if plr.clr == "red" then
			pal(12,14)
		end
		--spr(plr.sprite,plr.x,plr.y,1,1,plr.face_r)
		plr.draw()
		pal()
		--draw every object on the map
		foreach(on_map,function(obj)
			obj.type.draw(obj)
		end)
		if #on_map > 0 then
			updates = on_map[1].x
		end
		--draw snow/sand
		--if world == 2 then
			for i = 1,#parts do
				local temp = parts[i]
				rectfill(temp.x,temp.y,temp.x+0.5,temp.y+0.5,7)
			end
		--end
		
		--uncomment to debug
		
		--print("wall_jumps: "..plr.wall_jumps,10,10,7)
		--print("x:"..plr.x.." dy:"..plr.dy,16,16,7)
		--print(#clouds,20,20,5)
		--print(wall_x,30,30,5)
	end
end

function _update()
	
	
	if screen == "controls" then
		if btn(5) then
			screen = "game"
		end
	else
		plr.update()	
		
		--call the update function
		--for any object on the map
		foreach(on_map,function(obj)
			move(obj)
			if obj.type.update ~= nil then
				obj.type.update(obj)
			end
		end)
		
		if fget(mget((plr.x+(level-1)*128)/8,plr.y/8),goal_flag) then
			level +=1
			plr.x = 8
			plr.y = 104
			start_room()
		end
		
		if mapx_ofst < (level-1)*16 then
			mapx_ofst +=2
		end
		
			
		
		physics_update()
		part_tick +=1
		particle_update()
		clouds_update()
	end
end
-->8
--collision checking and physics
function move(obj)
	startx = obj.x
	starty = obj.y
	local x_ofst = 0
	local y_ofst = 0
	
	local realx = obj.x + (level-1)*128
	local realy = obj.y + (world-1)*128
	
	--attempt to change dy
	if obj.weighted then
		obj.dy+=gravity
	end
	--attempt to move in x direction
	obj.x += obj.dx
	
	if obj.x < 0 then
		obj.x = 0
	end
	
	if obj.dx > 0 then
		x_ofst = 7
	end
	
	--get the object at center y, x + offset
	--local obj_at = mget((plr.x+x_ofst+(level-1)*128)/8,(plr.y+4)/8)
	
	
	--if they touch a paint bucket
	--change color and stats
	
	
	--if theres an object where this would move us
	--go back to where we started in terms of x
	if solid_collision(realx+x_ofst,realy+4) then
		
		if obj.dx > 0 then
			jump_from = "right"
			obj.x = flr((obj.x)/8)*8
		elseif obj.dx < 0 then
			jump_from = "left"
			obj.x = flr((obj.x+8)/8)*8
		end
		
		obj.dx = 0
		if obj.weighted then	
			--this is bad but we'll try it
			if not plr.on_ground then
				if fget(obj_at,1) then
					plr.on_wall = true
					wall_x = plr.x
					if plr.wall_jumps > 0 then
						plr.j_left += 1
						plr.wall_jumps -=1
					end
				else
					plr.on_wall = false
				end
			end
		end
	end
	
	obj.y += obj.dy

	realy = obj.y + (world-1)*128

	if obj.dy > 0 then
		y_ofst = 7
	end
	
	--get object at where we'd fall to, center of player
	--obj_at = mget((plr.x+4+(level-1)*128)/8,(plr.y+y_ofst)/8)
 
 if solid_collision(realx+4,realy+y_ofst) then
 
	--if fget(obj_at,0) then
		--gets the top of the object that we're hitting
		
		--if we were moving down
		if obj.dy > 0 then
			plr.y = flr(plr.y/8)*8
		
		
			--stops our movement
			obj.dy = 0
			--we're on the ground
			if obj.weighted then
				plr.on_ground = true
				if plr.j_left < plr.max_jump then
					plr.j_left = plr.max_jump
					plr.wall_jumps = 1
				end
			end
		end
		
		if obj.dy < 0 then
			obj.y = flr((obj.y+8)/8)*8
			obj.dy = 0
		end
		
	end
	
	--now we've finished moving,
	--check for other stuff
	
	
 --if player touches deadly object such as spikes
	--die and restart the level
	
	if flag_collision(realx+x_ofst,realy+y_ofst,deadly_flag) then
		--respawn
		if obj.is_player then
			plr.respawning = true
			plr.x = basex
			plr.y = basey
			plr.dx = 0
			plr.dy = 0
			plr.ticker = 0
		else
			--destroy enemy
			-- not sure if this will be
			--implemented
		end
	end
	
end

function solid_collision(nx,ny)
	return flag_collision(nx,ny,solid_flag) or obj_collision(nx-(level-1)*128,ny-(world-1)*128)
end

function flag_collision(nx,ny,flag)
	local obj_at = mget(nx/8,ny/8)
	if fget(obj_at,flag) then
		return true
	end
end

function obj_collision(nx,ny)
	local result = false
	foreach(on_map,function(obj)
		if obj.solid then
			local leftx = obj.x
			local rightx = obj.x+obj.w
			local upy = obj.y
			local lowy = obj.y+obj.h
			
			if leftx <= nx and nx <= rightx then
				if upy <= ny and ny <= lowy then
					result = true
				end
			end
		end
	end)
	
	return result
end

function physics_update()

	if plr.j_left > plr.max_jump then
		plr.j_left = plr.max_jump
	end

	if plr.on_wall then
		local dist = abs(plr.x - wall_x)
		if dist > abs(plr.dx) then
			plr.on_wall = false
			wall_x = 0
		end
	end

	if plr.on_ground then
		plr.on_wall = false
		plr.dx *= g_friction
	else
		plr.dx *= a_friction
	end
	
	if plr.on_wall and plr.dy > 0 then
		gravity = .1
	else
		gravity = .25
	end
	
	if abs(plr.dx) > plr.max_dx then
		if plr.dx > 0 then
			plr.dx = plr.max_dx
		else
			plr.dx = -plr.max_dx
		end
	end
	
	if abs(plr.dx) < 0.1 then
		plr.dx = 0
	end
	
end




-->8
--animation functions



-->8
--cosmetics
function make_snow()
	local start = flr(rnd(128))+1
	snow = {
		x = 0,
		y = start,
		starty = start,
		height = flr(rnd(13))+2,
		spd = rnd(2)+1,
		start_tick = part_tick
		}
	return snow
end

function make_cloud()
	local start = flr(rnd(42))
	cld = {
		x = 0,
		y = start,
		starty = start,
		spd = rnd(0.5),
		start_tick = part_tick
		}
	return cld
end

function clouds_update()
	for i = 1,#clouds do
		clouds[i].x+=clouds[i].spd
		if clouds[i].x > 128 then
			clouds[i] = make_cloud()
		end
	end
end

function particle_update()
	for i = 1,#parts do
		parts[i].x+=parts[i].spd
		parts[i].y = parts[i].starty + parts[i].height*sin((part_tick-parts[i].start_tick)/50)
		if parts[i].x > 128 then
			parts[i] = make_snow()
		end
	end
	if part_tick > 100 then
		part_tick = 0
	end
end

-->8
--interactive objects

function create_classes()
	break_block = {
		tile = 77,
		init = function(this)
			this.solid = true
			this.state = 0
			this.ticker = 0
		end,
		draw = function(this)
			if this.state ~= 2 then
				local s = 77
				if this.state == 1 then
					s = 78
				end
				spr(s,this.x,this.y)
			end
		end,
		update = function(this)
			if this.state == 0 then
				this.solid = true
				if obj_at_tile(plr,this.x,this.y-1) then
					this.state = 1
					this.ticker = 40
				end
			elseif this.state == 1 then
				if this.ticker > 0 then
					this.ticker -= 1
				else
					this.state = 2
					this.solid = false
					this.ticker = 100
				end
			else
				if this.ticker > 0 then
					this.ticker-=1
				else
					this.state = 0
				end
			end
		end
	}
	add(classes,break_block)
end

function create(x,y,class)
	obj = {}
	obj.type = class
	obj.x = x
	obj.y = y
	obj.w = 8
	obj.h = 8
	obj.dx = 0
	obj.dy = 0
	obj.solid = true

	add(on_map,obj)
	if obj.type.init ~= nil then
		obj.type.init(obj)
	end
	return obj
end

function destroy_object(this)
	del(on_map,this)
end

function start_room()
	for i = 0,15 do
		for j = 0,15 do
			local temp_tile = mget(i+(level-1)*16,j)
			for k = 1,#classes do
				local typ = classes[k]
				if typ.tile == temp_tile then
					create(i*8,j*8,typ)
				end
			end
		end
	end
end

function obj_at_tile(obj,x,y)
	local tx = flr(x/8)
	local ty = flr(y/8)
	
	local leftx = obj.x
	local rightx = obj.x+obj.w
	local upy = obj.y
	local lowy = obj.y+obj.h
	
	for cx = tx*8,tx*8+7 do
		if leftx <= cx and cx <= rightx then
			if upy <= y and y <= lowy then
				return true
			end
		end
	end
end 
__gfx__
00000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e0000000000000007772277777722777
00000000000cc000000000000000ccc000c0000000077000000000000000000000000000000ee000000000000000eee000e00000000000007722227777222277
0070070000cccc00000cc000000cccccc000ccc00077770000077000000000000000000000eeee00000ee000000eeeeee000eee0000000007700a077770a0077
000770000cccccc000cccc0000cc8ccc000ccccc077777700077770000000000000000000eeeeee000eeee0000ee8eee000eeeee000000002222222222222222
00077000cc8cc8cc0cccccc00ccccc8c00cc8ccc77877877077777700000000000000000ee8ee8ee0eeeeee00eeeee8e00ee8eee000000007330303773030337
00700700cccccccccc8cc8cc0ccccccc0ccccc8c77777777778778770000000000000000eeeeeeeeee8ee8ee0eeeeeee0eeeee8e000000007333033773303337
000000000cccccc0cccccccc0cccccc00ccccccc077777707777777700000000000000000eeeeee0eeeeeeee0eeeeee00eeeeeee000000007333333773333337
0000000000cccc000cccccc000cccc0000ccccc00077770007777770000000000000000000eeee000eeeeee000eeee0000eeeee0000000007330003773000337
000000000000cc00000000000000000c00000cc0000000000000000000000000000000000000ee00000000000000000e00000ee0000000000000000000000000
000000000000cc000000cc00000000cc0000cccc000000000000000000000000000000000000ee000000ee00000000ee0000eeee000000000000000000000000
00000000000cccc0000cccc00000008c000cc8cc00000000000cc0000000000000000000000eeee0000eeee00000008e000ee8ee000000000000000000000000
00000000000cccc000c8c8c000000ccc00cccccc000cc00000cccc000000000000000000000eeee000e8e8e000000eee00eeeeee000000000000000000000000
0000000000c8cc8c0cccccc000000ccc00cccccc00cccc000c8cc8c0000000000000000000e8ee8e0eeeeee000000eee00eeeeee000000000000000000000000
0000000000cccccc0ccccc000000008c000cc8cc00cccc000cccccc0000000000000000000eeeeee0eeeee000000008e000ee8ee000000000000000000000000
00000000000cccc0ccccc000000000cc0000cccc0000000000cccc000000000000000000000eeee0eeeee000000000ee0000eeee000000000000000000000000
00000000000cccc0cccc00000000000c00000cc000000000000000000000000000000000000eeee0eeee00000000000e00000ee0000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000cc00000cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000cc00000cccc000c8cc8c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000cc00000cccc000cccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444b33bbb3bb333bb33666666660000000055555555555555550088800005b3000043344444b55544440aaa000aa0000aa09a999a999a099a9900000000
400000043bb33b3b3bbb333b6555555600000000555555555555555508888000005b30004b344444bb355444000a00aaaa00a0009aa99aa99a009aa900000a00
40444404b3b3b3b3333b33b36555555660066006dd5555dd5555555588a880000535b30043b444444bb3554400000aaaaaa0000a9a9999999a90990000009900
4040040444444444b333b333655665565005500555566555555555558888800003bb300035444444444b3344aa00aaaaaaaa00aaaa999999aa90000900000009
4040040445455544bb3333b3655665565555555555566555555555550008800005b3000043b44444444b3444000aaaaaaaaaa000999aa9aa999aa0aa099aa0a0
404444044444454433bbbbb36555555655555555dd5555dd555555550008800005b30000445b4444bbbb344400aaaaaaaaaaaa009999aaaa9990000a09900000
4000000444544545b333333365555556555555555555555555555555000880005b30000043b34443355b34440aaaaaaaaaaaaaa0aa999999a000990900000000
44444444444444443b3bb3bb6666666655555555555555555555555500088000b30000003334444b33353355aaaaaaaaaaaaaaaaa99999aaa099990a00090000
444444440000000000000000000000000006000000000000000000000000000053bb00003bb44bbb4435bb35aaaaaaaaaaaaaaaa000000000000000000000000
4444444400000000000000000000000000060000005555500055555000000000553b000033b4bb4444435b330aaaaaaaaaaaaaa0000000000000000000000000
44444444000000000000000000000000006560000588888505ccccc500000000053bb00055333bbb44433bb300aaaaaaaaaaaa00000000000000000000000000
444444440000000000000000000000000065600005588855055ccc55000000000553b0004555533bb444b4bb000aaaaaaaaaa000000000000000000000000000
44444444000000000000000000000000006560000055555000555550000000000053bb0044445553b4bb3444aa00aaaaaaaa00aa000000000000000000000000
444444440000000000000000000000000655560000555550005555500000000000553b0044444453bb333444a0000aaaaaa00000000000000000000000000000
44444444000000003333333300000000065556000005550000055500000000000053bb004444443344444444000a00aaaa00a000000000000000000000000000
4444444400000033333333333300000006555600000000000000000000000000053bb00044444433b4444444000a000aa0000a00000000000000000000000000
0b0b0b0b000033333333333333330000000000550000007777000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3000333333333333333333000000055660000077777700000000000000000000000000000000000000000000000000000000000000000000000000000
33333333003333333333333333333300005566660007077777707000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b3033333333333333333333330556666660077777777777700000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb033333333333333333333330556666660777777777777770000000000000000000000000000000000000000000000000000000000000000000000000
00000000003333333333333333333300005566667777777777777777000000000000000000000000000000000000000000000000000000000000000000000000
00000000000333333333333333333000000055660777777777777770000000000000000000000000000000000000000000000000000000000000000000000000
00000000000033333333333333330000000000550077777777777700000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000084000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000085000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000085000084000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008500000084000085000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000008400000085000084000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000008500000084000085000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085000000008400000085000084000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000065000084000055008545454584454585000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000024242424242424242424242424242424000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000014141414141414141414141414141414000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003030307030707810107070101000000030101010910100001070701010000000301010100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000004b4c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
52525300000000000000005b5c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6262630000000000000000000000470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
494a000000000000000000000000494a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
595a000000000000000000000000595a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
494a000000000000000000004242494a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
595a00000042000042000042595a595a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
494a000000480000580000000000494a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
595a000000580000480000000000595a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
494a000000480000580000000000494a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
595a424242424242424242000000595a00004d4d4d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000048000000480000000000494a00000000000000000000000000545454000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000058000000580000000000595a00000000000054545454545454540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424242424242424242424242424242424242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414141414141414141414141414141414141000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
